---
name: Terraform modules tests

on:
  schedule:
    - cron: '0 1 * * 2'
  workflow_dispatch:
  pull_request:


env:
  AWS_PROFILE: "infex"
  AWS_REGION: "eu-west-2"

jobs:
  check-run-tests:
    runs-on: ubuntu-latest
    # we allow integration tests for schedules, and for PR only if the content is tests or terraform related
    if: >-
      github.event_name == 'schedule' || (
        github.event_name == 'pull_request' &&
        (
          contains(github.event.pull_request.labels.*.name, 'test') ||
          contains(github.event.pull_request.labels.*.name, 'terraform')
        ) &&
        !contains(github.event.pull_request.labels.*.name, 'testing-ci-not-necessary')
      )
    steps:
      - name: Check labels
        run: |
          labels=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH")
          echo "Labels: $labels"
          if ! echo "$labels" | grep -qE "^testing-allowed$"; then
            echo "ERROR: Pull request must have either 'testing-allowed' or 'testing-ci-not-necessary' label. Then re-run this workflow by pushing a dummy commit."
            exit 1
          fi

  configure-tests:
    runs-on: ubuntu-latest
    # Other dependencies from hosted runner
    # AWS CLI
    # indirectly node used by actions
    needs:
      - check-run-tests
    outputs:
      test_functions: ${{ steps.extract_test_functions.outputs.test_functions }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@d1720f055e0635fd932a1d2a48f87a666a57906c # v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: true
          secrets: |
            secret/data/products/infrastructure-experience/ci/common AWS_ACCESS_KEY;
            secret/data/products/infrastructure-experience/ci/common AWS_SECRET_KEY;

      - name: Get Short GitHub SHA and Save in Environment Variable
        run: echo "SHORT_GITHUB_SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Extract Test Functions
        id: extract_test_functions
        run: |
          test_functions=$(grep -rho 'func \(Test[^ ]*\)' ./test/src/ | sed 's/func \(Test[^ ]*\)(t/\1/')

          : # Extract test names marked to be skipped from the commit message description
          skipped_tests=$(echo "$GITHUB_EVENT_PATH" | xargs cat | jq -r '.commits[].message' | grep -oP '(?<=skip: )[^\,]+' | tr '\n' ',')

          : # If any tests are marked to be skipped, remove them from the list of test functions
          if [ -n "$skipped_tests" ]; then
            for test in $(echo "$skipped_tests" | tr ',' '\n'); do
              test_functions=$(echo "$test_functions" | grep -v "$test")
            done
          fi

          echo "test_functions=${test_functions}" >> "$GITHUB_OUTPUT"
          echo "test_functions=${test_functions}"

  integration-tests:
    runs-on: ubuntu-latest
    needs:
      - configure-tests
    strategy:
      fail-fast: false # don't propagate failing jobs
      matrix:
        test_function: ${{ fromJson(needs.configure-tests.outputs.test_functions) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Install tooling using asdf
        uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6 # v3

      # Official action does not support profiles
      - name: Add profile credentials to ~/.aws/credentials
        run: |
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY }} --profile ${{ env.AWS_PROFILE }}
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_KEY }} --profile ${{ env.AWS_PROFILE }}
          aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.AWS_PROFILE }}

      - name: Get go.mod details
        uses: Eun/go-mod-details@b719cd324463e2037cf3a0dd1dd6091bdc2730f4 # v1
        id: go-mod-details
        with:
          modfile: ${{ github.workspace }}/test/src/go.mod

      - name: Launch tests in parallel
        timeout-minutes: 125
        run: |
          export TESTS_CLUSTER_ID="${{ env.SHORT_GITHUB_SHA }}"
          just test ${{ matrix.test_function }} "--junitfile ${{ matrix.test_function }}_unit-tests.xml"

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: "./test/src/${{ matrix.test_function }}_unit-tests.xml"

      - name: Remove profile credentials from ~/.aws/credentials
        if: always()
        run: |
          rm -rf ~/.aws/credentials

  test-report:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - integration-tests
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: test-reports
          path: /tmp/testreports

      - name: Run test-summary
        uses: test-summary/action@032c8a9cec6aaa3c20228112cae6ca10a3b29336 # v2
        with:
          paths: /tmp/testreports/**/*.xml
