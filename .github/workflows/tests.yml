---
name: Terraform modules tests

on:
  schedule:
    - cron: '0 1 * * 2'
  workflow_dispatch:
  pull_request:

env:
  AWS_PROFILE: "infex"
  AWS_REGION: "eu-central-1"

jobs:
  integration-test:
    runs-on: ubuntu-22.04
    # Other dependencies from hosted runner
    # AWS CLI
    # indirectly node used by actions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check labels
        run: |
          labels=$(jq -r '.pull_request.labels[].name' "$GITHUB_EVENT_PATH")
          echo "Labels: $labels"
          if ! echo "$labels" | grep -qE "^testing-allowed$|^testing-ci-not-necessary$"; then
            echo "ERROR: Pull request must have either 'testing-allowed' or 'testing-ci-not-necessary' label. Then re-run this workflow by pushing a dummy commit."
            exit 1
          fi

      - name: Get go.mod details
        if: ${{ github.event.label.name != 'testing-ci-not-necessary' }}
        uses: Eun/go-mod-details@v1
        id: go-mod-details
        with:
          modfile: ${{ github.workspace }}/test/src/go.mod

      - name: Set up Go environment
        if: ${{ github.event.label.name != 'testing-ci-not-necessary' }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.go-mod-details.outputs.go_version }}

      - name: Set up Terraform (OpenTofu)
        if: ${{ github.event.label.name != 'testing-ci-not-necessary' }}
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.6.2

      - name: Import Secrets
        if: ${{ github.event.label.name != 'testing-ci-not-necessary' }}
        id: secrets
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false
          secrets: |
            secret/data/products/infrastructure-experience/ci/common AWS_ACCESS_KEY;
            secret/data/products/infrastructure-experience/ci/common AWS_SECRET_KEY;

      # Official action does not support profiles
      - name: Add profile credentials to ~/.aws/credentials
        if: ${{ github.event.label.name != 'testing-ci-not-necessary' }}
        run: |
          aws configure set aws_access_key_id ${{ steps.secrets.outputs.AWS_ACCESS_KEY }} --profile ${{ env.AWS_PROFILE }}
          aws configure set aws_secret_access_key ${{ steps.secrets.outputs.AWS_SECRET_KEY }} --profile ${{ env.AWS_PROFILE }}
          aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.AWS_PROFILE }}

      - name: Get Short GitHub SHA and Save in Environment Variable
        if: ${{ github.event.label.name != 'testing-ci-not-necessary' }}
        run: echo "SHORT_GITHUB_SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Configure tests
        if: ${{ github.event.label.name != 'testing-ci-not-necessary' }}
        id: configure-tests
        run: |
          echo "TEST_CLUSTER_ID=${{ env.SHORT_GITHUB_SHA }}" >> "$GITHUB_ENV"
          echo "CLEAN_CLUSTER_AT_THE_END=true" >> "$GITHUB_ENV"

      - name: Launch tests
        if: ${{ github.event.label.name != 'testing-ci-not-necessary' }}
        working-directory: ./test/src/
        timeout-minutes: 125 # due to a limit on elastic ips, tests suites are ran 1 by 1
        run: |
          go test -v -timeout 120m -p 1 ./...

      - name: Remove profile credentials from ~/.aws/credentials
        if: always()
        run: |
          rm -rf ~/.aws/credentials
